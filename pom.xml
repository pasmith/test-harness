<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>spa</groupId>
	<artifactId>test-harness</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>spa test harness</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
		<javadocExecutable>/usr/bin/javadoc</javadocExecutable>
		<github.global.server>github</github.global.server>
		<sonar.language>java</sonar.language>
		<sonar.jdbc.url>jdbc:mysql://localhost:3306/sonar</sonar.jdbc.url>
		<sonar.jdbc.username>sonar</sonar.jdbc.username>
		<sonar.jdbc.password>sonar</sonar.jdbc.password>
		<sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- compiler configuration -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.0</version>
				</plugin>

				<!-- run unit tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12.2</version>
				</plugin>

				<!-- run integration tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.12.2</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- instrument code coverage -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.5.2</version>
					<!-- <configuration> <instrumentation> <ignores> <ignore>com.example.boringcode.*</ignore> 
						</ignores> <excludes> <exclude>com/example/dullcode/**/*.class</exclude> 
						<exclude>com/example/**/*Test.class</exclude> </excludes> </instrumentation> 
						</configuration> -->
					<executions>
						<execution>
							<goals>
								<goal>clean</goal>
								<goal>instrument</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- generate javadoc -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.8.1</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- generate build reports -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.1</version>
				</plugin>

				<!-- deploy artifacts to local repo in target folder -->
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
					</configuration>
				</plugin>

				<!-- upload deployment artifacts to github repo -->
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>0.7</version>
					<configuration>
						<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
						<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
						<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
						<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
						<includes>
							<include>**/*</include>
						</includes>
						<repositoryName>test-harness</repositoryName>      <!-- github repo name -->
						<repositoryOwner>pasmith</repositoryOwner>    <!-- github username -->
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.eclipse.mylyn.github</groupId>
							<artifactId>org.eclipse.egit.github.core</artifactId>
							<version>2.0.3</version>
						</dependency>
					</dependencies>
					<executions>
						<!-- run site-maven-plugin's 'site' target as part of the build's normal 
							'deploy' phase -->
						<execution>
							<goals>
								<goal>site</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Create the file to download -->
					<groupId>com.github.github</groupId>
					<artifactId>downloads-maven-plugin</artifactId>
					<version>0.6</version>
					<executions>
						<execution>
							<goals>
								<goal>upload</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
					<configuration>
						<description>${project.version} version of ${project.name}</description>
						<override>true</override>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.eclipse.mylyn.github</groupId>
							<artifactId>org.eclipse.egit.github.core</artifactId>
							<version>2.0.3</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>

		</pluginManagement>


		<plugins>
			<!-- generate javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<!-- generate the project reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>
			<!-- create single jar that includes dependencies -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId> 
				</plugin> -->
			<!-- optimize the production jar -->
			<!-- <plugin> <groupId>com.pyx4me</groupId> <artifactId>proguard-maven-plugin</artifactId> 
				</plugin> -->
			<!-- upload deployment artifacts to github repo -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<!-- count sloc -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>2.0-beta-2</version>
			</plugin>
			<!-- run automated regression tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12.2</version>
			</plugin>
			<!-- code coverage report -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<aggregate>true</aggregate>
					<forceMojoExecution>true</forceMojoExecution>
				</configuration>
			</plugin>
			<!-- static analyzer -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
			</plugin>
			<!-- cyclic dependency analyzer -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0-beta-2</version>
			</plugin>
			<!-- source code tags report -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<!-- static analyzer -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>
		</plugins>
	</reporting>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub spa test-harness Repository</name>
			<url>https://raw.github.com/pasmith/test-harness/mvn-repo</url>
		</repository>
	</distributionManagement>

</project>